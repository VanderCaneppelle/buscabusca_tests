name: Run Tests on Dispatch

on:
  repository_dispatch:
    types: [run-tests]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - run: pip install -r requirements.txt

      - name: Run tests
        id: pytest
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          mkdir -p results
          pytest tests/api --junitxml=results/report.xml || echo "Tests failed"

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: results/report.xml

      - name: Parse test results
        id: parse_results
        run: |
          TOTAL=$(grep 'tests=' results/report.xml | sed -n 's/.*tests="\([0-9]*\)".*/\1/p')
          FAILURES=$(grep 'failures=' results/report.xml | sed -n 's/.*failures="\([0-9]*\)".*/\1/p')
          ERRORS=$(grep 'errors=' results/report.xml | sed -n 's/.*errors="\([0-9]*\)".*/\1/p')
          PASSED=$((TOTAL - FAILURES - ERRORS))
          if [ "$FAILURES" -eq "0" ] && [ "$ERRORS" -eq "0" ]; then
            STATUS="✅ SUCCESS"
          else
            STATUS="❌ FAILED"
          fi
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failures=$FAILURES" >> $GITHUB_OUTPUT
          echo "errors=$ERRORS" >> $GITHUB_OUTPUT
          echo "status=$STATUS" >> $GITHUB_OUTPUT

      - name: Notify Slack
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*QA Tests Finished: ${{ steps.parse_results.outputs.status }}*"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Total:* ${{ steps.parse_results.outputs.total }}\n*Passed:* ${{ steps.parse_results.outputs.passed }}\n*Failures:* ${{ steps.parse_results.outputs.failures }}\n*Errors:* ${{ steps.parse_results.outputs.errors }}"
                }
              }
            ]
          }' ${{ secrets.SLACK_WEBHOOK_URL }}
